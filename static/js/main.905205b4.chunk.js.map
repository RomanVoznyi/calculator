{"version":3,"sources":["components/Display/Display.js","components/Buttons/buttonsList.js","components/Buttons/Buttons.js","handlers/digit.js","handlers/comma.js","handlers/registr.js","handlers/percent.js","handlers/action.js","handlers/memory.js","App.js","index.js"],"names":["Display","previousData","currentData","inProcess","useState","currStyle","setCurrStyle","prevStyle","setPrevStyle","updateCurrentData","checkLength","updatePreviousData","slice","length","text","parseFloat","toPrecision","replace","useEffect","tempStyle","className","buttonsList","id","display","type","value","Buttons","onClick","window","addEventListener","handleClick","removeEventListener","evt","currentTarget","dataset","classList","add","key","pressedBtn","find","el","document","querySelector","removeClass","remove","map","onTransitionEnd","data-type","data-value","notifyOptions","position","style","width","margin","checkDigitsLimit","includes","indexOf","digit","state","current","setCurrent","previous","setPrevious","toast","warning","prevState","comma","registr","checkComma","percent","calculate","firstNumber","action","secondNumber","checkPercentAndComma","Number","toString","setInProcess","oldNumber","tempResult","error","checkPercent","memory","storage","setStorage","success","info","App","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.905205b4.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport \"./Display.css\";\r\n\r\nconst Display = ({ previousData, currentData, inProcess }) => {\r\n  const [currStyle, setCurrStyle] = useState(\"\");\r\n  const [prevStyle, setPrevStyle] = useState(\"\");\r\n  const updateCurrentData = checkLength(currentData);\r\n  const updatePreviousData = inProcess\r\n    ? checkLength(previousData.slice(0, previousData.length - 1)) +\r\n      previousData[previousData.length - 1]\r\n    : checkLength(previousData);\r\n\r\n  useEffect(() => {\r\n    let tempStyle = \"currData\";\r\n    const length = updateCurrentData.length;\r\n\r\n    if (length > 7 && length <= 10) {\r\n      tempStyle += \" medium\";\r\n    }\r\n    if (length > 10) {\r\n      tempStyle += \" small\";\r\n    }\r\n    setCurrStyle(tempStyle);\r\n  }, [updateCurrentData]);\r\n\r\n  useEffect(() => {\r\n    let tempStyle = \"prevData\";\r\n    const length = updatePreviousData.length;\r\n    if (length > 10) {\r\n      tempStyle += \" small\";\r\n    }\r\n    setPrevStyle(tempStyle);\r\n  }, [updatePreviousData]);\r\n\r\n  function checkLength(text) {\r\n    if (text.length > 15) {\r\n      return parseFloat(text)\r\n        .toPrecision(5)\r\n        .replace(/\\.?0+$/, \"\");\r\n    }\r\n    return text;\r\n  }\r\n\r\n  return (\r\n    <div className=\"display\">\r\n      <p className={prevStyle}>{updatePreviousData}</p>\r\n      <p className={currStyle}>{updateCurrentData}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","const buttonsList = [\r\n  { id: \"1\", display: \"AC\", type: \"clear\", value: \"clear\" },\r\n  { id: \"2\", display: \"+/-\", type: \"registr\", value: \"-\" },\r\n  { id: \"3\", display: \"%\", type: \"percent\", value: \"%\" },\r\n  { id: \"4\", display: `\\u00F7`, type: \"action\", value: \"/\" },\r\n  { id: \"5\", display: \"mc\", type: \"memory\", value: \"memClear\" },\r\n  { id: \"6\", display: \"mr\", type: \"memory\", value: \"memReturn\" },\r\n  { id: \"7\", display: \"m-\", type: \"memory\", value: \"memMinus\" },\r\n  { id: \"8\", display: \"m+\", type: \"memory\", value: \"memPlus\" },\r\n  { id: \"9\", display: \"7\", type: \"digit\", value: \"7\" },\r\n  { id: \"10\", display: \"8\", type: \"digit\", value: \"8\" },\r\n  { id: \"11\", display: \"9\", type: \"digit\", value: \"9\" },\r\n  { id: \"12\", display: `\\u00D7`, type: \"action\", value: \"*\" },\r\n  { id: \"13\", display: \"4\", type: \"digit\", value: \"4\" },\r\n  { id: \"14\", display: \"5\", type: \"digit\", value: \"5\" },\r\n  { id: \"15\", display: \"6\", type: \"digit\", value: \"6\" },\r\n  { id: \"16\", display: `\\u2212`, type: \"action\", value: \"-\" },\r\n  { id: \"17\", display: \"1\", type: \"digit\", value: \"1\" },\r\n  { id: \"18\", display: \"2\", type: \"digit\", value: \"2\" },\r\n  { id: \"19\", display: \"3\", type: \"digit\", value: \"3\" },\r\n  { id: \"20\", display: \"+\", type: \"action\", value: \"+\" },\r\n  { id: \"21\", display: \"0\", type: \"digit\", value: \"0\" },\r\n  { id: \"22\", display: `\\u0317`, type: \"comma\", value: \".\" },\r\n  { id: \"23\", display: \"=\", type: \"action\", value: \"=\" },\r\n];\r\n\r\nexport default buttonsList;\r\n","import { useEffect } from \"react\";\r\nimport buttonsList from \"./buttonsList\";\r\nimport \"./Buttons.css\";\r\n\r\nconst Buttons = ({ onClick }) => {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleClick);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleClick);\r\n    };\r\n  });\r\n\r\n  const handleClick = (evt) => {\r\n    let type;\r\n    let value;\r\n    if (evt.type === \"click\") {\r\n      type = evt.currentTarget.dataset[\"type\"];\r\n      value = evt.currentTarget.dataset[\"value\"];\r\n      evt.currentTarget.classList.add(\"active\");\r\n\r\n      onClick(type, value);\r\n    }\r\n    if (evt.type === \"keydown\") {\r\n      let key;\r\n      switch (evt.key) {\r\n        case \"Enter\":\r\n          key = \"=\";\r\n          break;\r\n        case \",\":\r\n          key = \".\";\r\n          break;\r\n        case \"Escape\":\r\n          key = \"clear\";\r\n          break;\r\n        default:\r\n          key = evt.key;\r\n          break;\r\n      }\r\n\r\n      const pressedBtn = buttonsList.find((el) => el.value === key);\r\n      if (pressedBtn) {\r\n        value = pressedBtn.value;\r\n        type = value === \"-\" ? \"action\" : pressedBtn.type;\r\n\r\n        const el = document.querySelector(\r\n          `[data-type=\"${type}\"][data-value=\"${value}\"]`\r\n        );\r\n        el.classList.add(\"active\");\r\n\r\n        onClick(type, value);\r\n      }\r\n    }\r\n  };\r\n\r\n  const removeClass = (evt) => {\r\n    evt.currentTarget.classList.remove(\"active\");\r\n  };\r\n\r\n  return (\r\n    <ul className=\"buttonsList\">\r\n      {buttonsList.map((el) => (\r\n        <li\r\n          className=\"button-item\"\r\n          key={el.id}\r\n          onClick={handleClick}\r\n          onTransitionEnd={removeClass}\r\n          data-type={el.type}\r\n          data-value={el.value}\r\n        >\r\n          <span>{el.display}</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","import { toast } from \"react-toastify\";\r\n\r\nconst notifyOptions = {\r\n  position: \"bottom-center\",\r\n  style: { width: \"200px\", margin: \"0 auto\" },\r\n};\r\n\r\nconst digit = (value, state) => {\r\n  const { current, setCurrent, previous, setPrevious, inProcess } = state;\r\n\r\n  if (!current.includes(\"%\")) {\r\n    if ((previous && !inProcess) || current === \"error\") {\r\n      setCurrent(value);\r\n      setPrevious(\"\");\r\n    } else if (checkDigitsLimit(current, \"total\")) {\r\n      toast.warning(\"only 15 digits can be entered here\", notifyOptions);\r\n    } else if (checkDigitsLimit(current, \"comma\")) {\r\n      toast.warning(\r\n        \"only 10 digits after point '.' can be entered here\",\r\n        notifyOptions\r\n      );\r\n    } else {\r\n      setCurrent((prevState) =>\r\n        prevState === \"0\" ? value : prevState + value\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nconst checkDigitsLimit = (text, type) => {\r\n  if (type === \"comma\") {\r\n    return text.includes(\".\") && text.slice(text.indexOf(\".\") + 1).length > 9;\r\n  }\r\n  return text.length > 14;\r\n};\r\n\r\nexport default digit;\r\n","const comma = (value, state) => {\r\n  const { current, setCurrent, previous, setPrevious, inProcess } = state;\r\n\r\n  if (\r\n    current.length < 14 &&\r\n    !current.includes(value) &&\r\n    !current.includes(\"%\")\r\n  ) {\r\n    if (current === \"error\" || (!inProcess && previous)) {\r\n      setCurrent(`0${value}`);\r\n      setPrevious(\"\");\r\n    } else {\r\n      setCurrent((prevState) => prevState + value);\r\n    }\r\n  }\r\n};\r\n\r\nexport default comma;\r\n","const registr = (value, state) => {\r\n  const { current, setCurrent } = state;\r\n\r\n  if (current.length < 14 && current !== \"0\" && current !== \"error\") {\r\n    setCurrent((prevState) =>\r\n      prevState.includes(value) ? prevState.slice(1) : value + prevState\r\n    );\r\n  }\r\n};\r\n\r\nexport default registr;\r\n","const percent = (value, state) => {\r\n  const { current, setCurrent } = state;\r\n\r\n  if (current.length < 14 && current !== \"error\" && !current.includes(value)) {\r\n    setCurrent((prevState) => checkComma(prevState) + value);\r\n  }\r\n};\r\n\r\nconst checkComma = (text) => {\r\n  if (text[text.length - 1] === \".\") {\r\n    return text.slice(0, text.length - 1);\r\n  }\r\n  return text;\r\n};\r\n\r\nexport default percent;\r\n","import { toast } from \"react-toastify\";\r\n\r\nconst notifyOptions = {\r\n  position: \"bottom-center\",\r\n  style: { width: \"200px\", margin: \"0 auto\" },\r\n};\r\n\r\nconst action = (value, state) => {\r\n  const {\r\n    current,\r\n    setCurrent,\r\n    previous,\r\n    setPrevious,\r\n    inProcess,\r\n    setInProcess,\r\n  } = state;\r\n\r\n  if (current !== \"error\") {\r\n    if (!inProcess && value !== \"=\") {\r\n      setPrevious(checkPercentAndComma(current) + value);\r\n      setCurrent(\"0\");\r\n      setInProcess(true);\r\n    }\r\n    if (previous !== \"\" && inProcess) {\r\n      const oldNumber = previous.slice(0, previous.length - 1);\r\n      const action = previous.slice(previous.length - 1);\r\n      let tempResult = calculate(\r\n        parseFloat(oldNumber),\r\n        action,\r\n        parseFloat(checkPercentAndComma(current))\r\n      );\r\n      if (tempResult === \"error\") {\r\n        toast.error(\"Division by zero\", notifyOptions);\r\n        setCurrent(tempResult);\r\n        setPrevious(\"\");\r\n        setInProcess(false);\r\n      } else {\r\n        if (value === \"=\") {\r\n          setCurrent(tempResult.toString());\r\n          setPrevious(tempResult.toString());\r\n          setInProcess(false);\r\n        } else {\r\n          setPrevious(tempResult.toString() + value);\r\n          setCurrent(\"0\");\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst calculate = (firstNumber, action, secondNumber) => {\r\n  switch (action) {\r\n    case \"+\":\r\n      return firstNumber + secondNumber;\r\n    case \"-\":\r\n      return firstNumber - secondNumber;\r\n    case \"*\":\r\n      return firstNumber * secondNumber;\r\n    case \"/\":\r\n      return secondNumber !== 0 ? firstNumber / secondNumber : \"error\";\r\n    default:\r\n      return \"error\";\r\n  }\r\n};\r\n\r\nconst checkPercentAndComma = (text) => {\r\n  if (text.includes(\"%\")) {\r\n    return (Number(text.slice(0, text.length - 1)) / 100).toString();\r\n  }\r\n  if (text[text.length - 1] === \".\") {\r\n    return text.slice(0, text.length - 1);\r\n  }\r\n  return text;\r\n};\r\n\r\nexport default action;\r\n","import { toast } from \"react-toastify\";\r\n\r\nconst notifyOptions = {\r\n  position: \"bottom-center\",\r\n  style: { width: \"200px\", margin: \"0 auto\" },\r\n};\r\n\r\nconst memory = (value, state) => {\r\n  const { current, setCurrent, storage, setStorage } = state;\r\n\r\n  if (value === \"memClear\") {\r\n    setStorage(\"\");\r\n  }\r\n\r\n  if (value === \"memMinus\" && current !== \"error\") {\r\n    setStorage((prevState) =>\r\n      (Number(prevState) - Number(checkPercent(current))).toString()\r\n    );\r\n    toast.success(\"Saved\", notifyOptions);\r\n  }\r\n\r\n  if (value === \"memPlus\" && current !== \"error\") {\r\n    setStorage((prevState) =>\r\n      (Number(prevState) + Number(checkPercent(current))).toString()\r\n    );\r\n    toast.success(\"Saved\", notifyOptions);\r\n  }\r\n\r\n  if (value === \"memReturn\") {\r\n    storage === \"\"\r\n      ? toast.info(\"Storage empty\", notifyOptions)\r\n      : setCurrent(storage);\r\n  }\r\n};\r\n\r\nconst checkPercent = (text) => {\r\n  return text.includes(\"%\")\r\n    ? (Number(text.slice(0, text.length - 1)) / 100).toString()\r\n    : text;\r\n};\r\n\r\nexport default memory;\r\n","import { useState } from \"react\";\nimport Display from \"./components/Display\";\nimport Buttons from \"./components/Buttons\";\nimport { digit, comma, registr, percent, action, memory } from \"./handlers\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [current, setCurrent] = useState(\"0\");\n  const [previous, setPrevious] = useState(\"\");\n  const [inProcess, setInProcess] = useState(false);\n  const [storage, setStorage] = useState(\"\");\n\n  const handleClick = (type, value) => {\n    const state = {\n      current,\n      setCurrent,\n      previous,\n      setPrevious,\n      inProcess,\n      setInProcess,\n      storage,\n      setStorage,\n    };\n\n    switch (type) {\n      case \"digit\":\n        digit(value, state);\n        break;\n      case \"comma\":\n        comma(value, state);\n        break;\n      case \"registr\":\n        registr(value, state);\n        break;\n      case \"percent\":\n        percent(value, state);\n        break;\n      case \"action\":\n        action(value, state);\n        break;\n      case \"memory\":\n        memory(value, state);\n        break;\n\n      default:\n        setCurrent(\"0\");\n        setPrevious(\"\");\n        setInProcess(false);\n        break;\n    }\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <ToastContainer autoClose={3000} />\n      <div className=\"calculator\">\n        <Display\n          previousData={previous}\n          currentData={current}\n          inProcess={inProcess}\n        />\n        <Buttons onClick={handleClick} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}